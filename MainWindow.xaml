<Controls:MetroWindow x:Class="WpfApplication5.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WpfApplication5"
        xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
        mc:Ignorable="d"
        Controls:ButtonHelper.PreserveTextCase="True"
        Title="Sistema Extrator de E-mails | Torpedos Brasil" Height="656.213" Width="1280.885" Loaded="Window_Loaded" Background="White"
        Icon="pack://application:,,,/Resources/icon_sistema_extratot_torpedos_brasil.png"
        GlowBrush="{DynamicResource AccentColorBrush}" Foreground="{x:Null}">


    <Controls:MetroWindow.Resources>
        <Style x:Key="TextBoxStyle1" TargetType="{x:Type TextBox}">
            <Setter Property="Controls:TextBoxHelper.ButtonTemplate" Value="{DynamicResource ChromelessButtonTemplate}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="enterGotFocus">
                                <DoubleAnimation Duration="0:0:0.2" To="0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
                            </Storyboard>
                            <Storyboard x:Key="exitGotFocus">
                                <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
                            </Storyboard>
                            <Storyboard x:Key="enterHasText">
                                <DoubleAnimation Duration="0:0:0.2" From="0.2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
                            </Storyboard>
                            <Storyboard x:Key="exitHasText">
                                <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Grid>
                            <Border x:Name="Base" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            <Grid x:Name="PART_InnerGrid" Margin="2">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition x:Name="TextColumn" Width="*"/>
                                    <ColumnDefinition x:Name="ButtonColumn" Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition x:Name="ButtonRow" Height="*"/>
                                </Grid.RowDefinitions>
                                <Border x:Name="ReadOnlyVisualElement" Background="{x:Null}" Grid.ColumnSpan="2" Opacity="0" Grid.Row="1"/>
                                <ScrollViewer x:Name="PART_ContentHost" BorderThickness="0" Background="{x:Null}" Grid.Column="0" IsTabStop="False" Margin="2" Grid.Row="1" VerticalAlignment="Stretch"/>
                                <TextBlock x:Name="PART_Message" Grid.Column="0" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="False" Margin="6,2" Opacity="0.6" Padding="{TemplateBinding Padding}" Grid.Row="1" Text="{TemplateBinding Controls:TextBoxHelper.Watermark}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                <ContentControl x:Name="PART_FloatingMessageContainer" Grid.ColumnSpan="2" Grid.Column="0" Style="{DynamicResource FloatingMessageContainerStyle}">
                                    <TextBlock x:Name="PART_FloatingMessage" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Style="{DynamicResource MetroAutoCollapsingTextBlock}" Text="{TemplateBinding Controls:TextBoxHelper.Watermark}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </ContentControl>
                                <Button x:Name="PART_ClearText" Content="{Binding (Controls:TextBoxHelper.ButtonContent), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Grid.Column="1" Foreground="{TemplateBinding Foreground}" FontSize="16" FontFamily="{Binding (Controls:TextBoxHelper.ButtonFontFamily), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsTabStop="False" Controls:TextBoxHelper.IsClearTextButtonBehaviorEnabled="True" Grid.RowSpan="2" Style="{DynamicResource ChromelessButtonStyle}" Template="{Binding (Controls:TextBoxHelper.ButtonTemplate), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Width="{Binding (Controls:ControlsHelper.ButtonWidth), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Height="Auto" Click="PART_ClearText_Click"/>
                            </Grid>
                            <Border x:Name="DisabledVisualElement" BorderBrush="{DynamicResource ControlsDisabledBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{DynamicResource ControlsDisabledBrush}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Visibility="{Binding (Controls:ControlsHelper.DisabledVisualElementVisibility), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" HorizontalAlignment="Left" Width="380"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <DataTrigger Binding="{Binding (Controls:TextBoxHelper.ButtonsAlignment), RelativeSource={RelativeSource Self}}" Value="Left">
                                <Setter Property="Grid.Column" TargetName="PART_ClearText" Value="0"/>
                                <Setter Property="Grid.Column" TargetName="PART_Message" Value="1"/>
                                <Setter Property="Width" TargetName="TextColumn" Value="Auto"/>
                                <Setter Property="Width" TargetName="ButtonColumn" Value="*"/>
                                <Setter Property="Grid.Column" TargetName="PART_ContentHost" Value="1"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource Self}}" Value="">
                                <Setter Property="Visibility" TargetName="PART_Message" Value="Visible"/>
                            </DataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding (Controls:TextBoxHelper.UseFloatingWatermark), RelativeSource={RelativeSource Self}}" Value="True"/>
                                    <Condition Binding="{Binding (Controls:TextBoxHelper.HasText), RelativeSource={RelativeSource Self}}" Value="True"/>
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.2" To="15" Storyboard.TargetProperty="MaxHeight" Storyboard.TargetName="PART_FloatingMessageContainer">
                                                <DoubleAnimation.EasingFunction>
                                                    <ExponentialEase EasingMode="EaseInOut" Exponent="2"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                            <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_FloatingMessageContainer"/>
                                            <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" Storyboard.TargetName="PART_FloatingMessage">
                                                <DoubleAnimation.EasingFunction>
                                                    <ExponentialEase EasingMode="EaseOut" Exponent="2"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiDataTrigger.EnterActions>
                                <MultiDataTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="MaxHeight" Storyboard.TargetName="PART_FloatingMessageContainer">
                                                <DoubleAnimation.EasingFunction>
                                                    <ExponentialEase EasingMode="EaseInOut" Exponent="2"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                            <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_FloatingMessageContainer"/>
                                            <DoubleAnimation Duration="0:0:0.2" To="20" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" Storyboard.TargetName="PART_FloatingMessage">
                                                <DoubleAnimation.EasingFunction>
                                                    <ExponentialEase EasingMode="EaseIn" Exponent="2"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiDataTrigger.ExitActions>
                            </MultiDataTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="TextWrapping" Value="NoWrap"/>
                                    <Condition Property="AcceptsReturn" Value="False"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Width" TargetName="PART_ClearText" Value="{Binding ActualHeight, Mode=OneWay, RelativeSource={RelativeSource Self}}"/>
                            </MultiTrigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" TargetName="Base" Value="{Binding (Controls:ControlsHelper.MouseOverBorderBrush), RelativeSource={RelativeSource TemplatedParent}}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.6"/>
                            </Trigger>
                            <Trigger Property="IsReadOnly" Value="True">
                                <Setter Property="Opacity" TargetName="ReadOnlyVisualElement" Value="1"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="BorderBrush" TargetName="Base" Value="{Binding (Controls:ControlsHelper.FocusBorderBrush), RelativeSource={RelativeSource TemplatedParent}}"/>
                                <Setter Property="Foreground" TargetName="PART_FloatingMessage" Value="{DynamicResource AccentColorBrush}"/>
                                <Setter Property="Opacity" TargetName="PART_FloatingMessage" Value="1"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" SourceName="PART_ClearText" Value="True">
                                <Setter Property="Background" TargetName="PART_ClearText" Value="{DynamicResource GrayBrush8}"/>
                                <Setter Property="Foreground" TargetName="PART_ClearText" Value="{DynamicResource AccentColorBrush}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" SourceName="PART_ClearText" Value="True">
                                <Setter Property="Background" TargetName="PART_ClearText" Value="{DynamicResource BlackBrush}"/>
                                <Setter Property="Foreground" TargetName="PART_ClearText" Value="{DynamicResource WhiteBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.BasedOn>
                <Style TargetType="{x:Type TextBox}">
                    <Setter Property="ContextMenu" Value="{DynamicResource TextBoxMetroContextMenu}"/>
                    <Setter Property="Controls:TextBoxHelper.IsMonitoring" Value="True"/>
                    <Setter Property="Controls:ControlsHelper.ButtonWidth" Value="22"/>
                    <Setter Property="SelectionBrush" Value="{DynamicResource HighlightBrush}"/>
                    <Setter Property="FontFamily" Value="{DynamicResource ContentFontFamily}"/>
                    <Setter Property="FontSize" Value="{DynamicResource ContentFontSize}"/>
                    <Setter Property="BorderThickness" Value="1"/>
                    <Setter Property="MinHeight" Value="26"/>
                    <Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}"/>
                    <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                    <Setter Property="Padding" Value="0"/>
                    <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                    <Setter Property="Controls:ControlsHelper.FocusBorderBrush" Value="{DynamicResource TextBoxFocusBorderBrush}"/>
                    <Setter Property="Controls:ControlsHelper.MouseOverBorderBrush" Value="{DynamicResource TextBoxMouseOverBorderBrush}"/>
                    <Setter Property="SnapsToDevicePixels" Value="True"/>
                    <Setter Property="Validation.ErrorTemplate" Value="{DynamicResource ValidationErrorTemplate}"/>
                    <Setter Property="CaretBrush" Value="{DynamicResource BlackBrush}"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type TextBox}">
                                <ControlTemplate.Resources>
                                    <Storyboard x:Key="enterGotFocus">
                                        <DoubleAnimation Duration="0:0:0.2" To="0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
                                    </Storyboard>
                                    <Storyboard x:Key="exitGotFocus">
                                        <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
                                    </Storyboard>
                                    <Storyboard x:Key="enterHasText">
                                        <DoubleAnimation Duration="0:0:0.2" From="0.2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
                                    </Storyboard>
                                    <Storyboard x:Key="exitHasText">
                                        <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
                                    </Storyboard>
                                </ControlTemplate.Resources>
                                <Grid>
                                    <Border x:Name="Base" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    <Grid x:Name="PART_InnerGrid" Margin="2">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition x:Name="TextColumn" Width="*"/>
                                            <ColumnDefinition x:Name="ButtonColumn" Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition x:Name="ButtonRow" Height="*"/>
                                        </Grid.RowDefinitions>
                                        <Border x:Name="ReadOnlyVisualElement" Background="{x:Null}" Grid.ColumnSpan="2" Opacity="0" Grid.Row="1"/>
                                        <ScrollViewer x:Name="PART_ContentHost" BorderThickness="0" Background="{x:Null}" Grid.Column="0" IsTabStop="False" Margin="2" Grid.Row="1" VerticalAlignment="Stretch"/>
                                        <TextBlock x:Name="PART_Message" Grid.Column="0" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="False" Margin="6,2" Opacity="0.6" Padding="{TemplateBinding Padding}" Grid.Row="1" Text="{TemplateBinding Controls:TextBoxHelper.Watermark}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        <ContentControl x:Name="PART_FloatingMessageContainer" Grid.ColumnSpan="2" Grid.Column="0" Style="{DynamicResource FloatingMessageContainerStyle}">
                                            <TextBlock x:Name="PART_FloatingMessage" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Style="{DynamicResource MetroAutoCollapsingTextBlock}" Text="{TemplateBinding Controls:TextBoxHelper.Watermark}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        </ContentControl>
                                        <Button x:Name="PART_ClearText" Content="{Binding (Controls:TextBoxHelper.ButtonContent), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Grid.Column="1" Foreground="{TemplateBinding Foreground}" FontSize="16" FontFamily="{Binding (Controls:TextBoxHelper.ButtonFontFamily), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsTabStop="False" Controls:TextBoxHelper.IsClearTextButtonBehaviorEnabled="{Binding (Controls:TextBoxHelper.ClearTextButton), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Grid.RowSpan="2" Style="{DynamicResource ChromelessButtonStyle}" Width="{Binding (Controls:ControlsHelper.ButtonWidth), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}">
                                            <Button.Visibility>
                                                <Binding Mode="OneWay" Path="(Controls:TextBoxHelper.ClearTextButton)" RelativeSource="{RelativeSource TemplatedParent}">
                                                    <Binding.Converter>
                                                        <BooleanToVisibilityConverter/>
                                                    </Binding.Converter>
                                                </Binding>
                                            </Button.Visibility>
                                        </Button>
                                    </Grid>
                                    <Border x:Name="DisabledVisualElement" BorderBrush="{DynamicResource ControlsDisabledBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{DynamicResource ControlsDisabledBrush}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Visibility="{Binding (Controls:ControlsHelper.DisabledVisualElementVisibility), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <DataTrigger Binding="{Binding (Controls:TextBoxHelper.ButtonsAlignment), RelativeSource={RelativeSource Self}}" Value="Left">
                                        <Setter Property="Grid.Column" TargetName="PART_ClearText" Value="0"/>
                                        <Setter Property="Grid.Column" TargetName="PART_Message" Value="1"/>
                                        <Setter Property="Width" TargetName="TextColumn" Value="Auto"/>
                                        <Setter Property="Width" TargetName="ButtonColumn" Value="*"/>
                                        <Setter Property="Grid.Column" TargetName="PART_ContentHost" Value="1"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource Self}}" Value="">
                                        <Setter Property="Visibility" TargetName="PART_Message" Value="Visible"/>
                                    </DataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding (Controls:TextBoxHelper.UseFloatingWatermark), RelativeSource={RelativeSource Self}}" Value="True"/>
                                            <Condition Binding="{Binding (Controls:TextBoxHelper.HasText), RelativeSource={RelativeSource Self}}" Value="True"/>
                                        </MultiDataTrigger.Conditions>
                                        <MultiDataTrigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0:0:0.2" To="15" Storyboard.TargetProperty="MaxHeight" Storyboard.TargetName="PART_FloatingMessageContainer">
                                                        <DoubleAnimation.EasingFunction>
                                                            <ExponentialEase EasingMode="EaseInOut" Exponent="2"/>
                                                        </DoubleAnimation.EasingFunction>
                                                    </DoubleAnimation>
                                                    <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_FloatingMessageContainer"/>
                                                    <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" Storyboard.TargetName="PART_FloatingMessage">
                                                        <DoubleAnimation.EasingFunction>
                                                            <ExponentialEase EasingMode="EaseOut" Exponent="2"/>
                                                        </DoubleAnimation.EasingFunction>
                                                    </DoubleAnimation>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </MultiDataTrigger.EnterActions>
                                        <MultiDataTrigger.ExitActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="MaxHeight" Storyboard.TargetName="PART_FloatingMessageContainer">
                                                        <DoubleAnimation.EasingFunction>
                                                            <ExponentialEase EasingMode="EaseInOut" Exponent="2"/>
                                                        </DoubleAnimation.EasingFunction>
                                                    </DoubleAnimation>
                                                    <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_FloatingMessageContainer"/>
                                                    <DoubleAnimation Duration="0:0:0.2" To="20" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" Storyboard.TargetName="PART_FloatingMessage">
                                                        <DoubleAnimation.EasingFunction>
                                                            <ExponentialEase EasingMode="EaseIn" Exponent="2"/>
                                                        </DoubleAnimation.EasingFunction>
                                                    </DoubleAnimation>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </MultiDataTrigger.ExitActions>
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding (Controls:TextBoxHelper.ButtonsAlignment), RelativeSource={RelativeSource Self}}" Value="Right"/>
                                            <Condition Binding="{Binding (Controls:TextBoxHelper.ClearTextButton), RelativeSource={RelativeSource Self}}" Value="False"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Grid.ColumnSpan" TargetName="PART_ContentHost" Value="2"/>
                                        <Setter Property="Grid.ColumnSpan" TargetName="PART_Message" Value="2"/>
                                    </MultiDataTrigger>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="BorderBrush" TargetName="Base" Value="{Binding (Controls:ControlsHelper.MouseOverBorderBrush), RelativeSource={RelativeSource TemplatedParent}}"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.6"/>
                                    </Trigger>
                                    <Trigger Property="IsReadOnly" Value="True">
                                        <Setter Property="IsEnabled" TargetName="PART_ClearText" Value="False"/>
                                        <Setter Property="Opacity" TargetName="ReadOnlyVisualElement" Value="1"/>
                                    </Trigger>
                                    <Trigger Property="IsFocused" Value="True">
                                        <Setter Property="BorderBrush" TargetName="Base" Value="{Binding (Controls:ControlsHelper.FocusBorderBrush), RelativeSource={RelativeSource TemplatedParent}}"/>
                                        <Setter Property="Foreground" TargetName="PART_FloatingMessage" Value="{DynamicResource AccentColorBrush}"/>
                                        <Setter Property="Opacity" TargetName="PART_FloatingMessage" Value="1"/>
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" SourceName="PART_ClearText" Value="True">
                                        <Setter Property="Background" TargetName="PART_ClearText" Value="{DynamicResource GrayBrush8}"/>
                                        <Setter Property="Foreground" TargetName="PART_ClearText" Value="{DynamicResource AccentColorBrush}"/>
                                    </Trigger>
                                    <Trigger Property="IsPressed" SourceName="PART_ClearText" Value="True">
                                        <Setter Property="Background" TargetName="PART_ClearText" Value="{DynamicResource BlackBrush}"/>
                                        <Setter Property="Foreground" TargetName="PART_ClearText" Value="{DynamicResource WhiteBrush}"/>
                                    </Trigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="Controls:TextBoxHelper.HasText" Value="False"/>
                                            <Condition Property="IsFocused" Value="True"/>
                                        </MultiTrigger.Conditions>
                                        <MultiTrigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0:0:0.2" To="0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </MultiTrigger.EnterActions>
                                        <MultiTrigger.ExitActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </MultiTrigger.ExitActions>
                                    </MultiTrigger>
                                    <Trigger Property="Controls:TextBoxHelper.HasText" Value="True">
                                        <Trigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0:0:0.2" From="0.2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </Trigger.EnterActions>
                                        <Trigger.ExitActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </Trigger.ExitActions>
                                    </Trigger>
                                    <Trigger Property="Controls:TextBoxHelper.IsWaitingForData" Value="True">
                                        <Trigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation AutoReverse="True" Duration="0:0:2" From="0" RepeatBehavior="Forever" To="1" Storyboard.TargetProperty="(Effect).Opacity" Storyboard.TargetName="Base"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </Trigger.EnterActions>
                                        <Setter Property="Effect" TargetName="Base">
                                            <Setter.Value>
                                                <DropShadowEffect BlurRadius="10" Color="{DynamicResource BlackColor}" Opacity="0" ShadowDepth="0"/>
                                            </Setter.Value>
                                        </Setter>
                                    </Trigger>
                                    <Trigger Property="Controls:TextBoxHelper.IsWaitingForData" Value="False">
                                        <Setter Property="Effect" TargetName="Base" Value="{x:Null}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Style.BasedOn>
        </Style>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
    </Controls:MetroWindow.Resources>



    <Controls:MetroWindow.RightWindowCommands>
        <Controls:WindowCommands>
            <Button x:Name="RegistrarAgora" Visibility="{Binding NotisRegistered, Converter={StaticResource BooleanToVisibilityConverter}}" Click="Button_Click_2">
                <StackPanel Orientation="Horizontal" Visibility="Visible">
                    <Rectangle Width="20" Height="20"
                   Fill="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}">
                        <Rectangle.OpacityMask>
                            <VisualBrush Stretch="Fill"
                         Visual="{StaticResource appbar_cupcake}" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                    <TextBlock Margin="4 0 0 0"
                   VerticalAlignment="Center" 
                   Text="Registrar Agora!" Foreground="Red" FontWeight="Bold" FontFamily="Segoe UI Semibold" />
                </StackPanel>
            </Button>
        </Controls:WindowCommands>
    </Controls:MetroWindow.RightWindowCommands>


    <TabControl x:Name="tabControl" Foreground="{x:Null}" Margin="10,0,0,0">
        <TabItem Header="Busca" Background="{x:Null}" Margin="0" MinWidth="5" MinHeight="5" Padding="6,2,9,2">
            <Grid x:Name="GridTab1" Margin="0,0,0,-3">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="137*"/>
                    <ColumnDefinition Width="139*"/>
                    <ColumnDefinition Width="397*"/>
                    <ColumnDefinition Width="294*"/>
                    <ColumnDefinition Width="283*"/>
                </Grid.ColumnDefinitions>
                <Grid.Resources>
                    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
                </Grid.Resources>
                <Grid.RowDefinitions>
                    <RowDefinition Height="27*"/>
                    <RowDefinition Height="516*"/>
                    <RowDefinition Height="40*"/>
                </Grid.RowDefinitions>
                <Controls:MetroProgressBar
                            Margin="0,0,0,11"
                            Foreground="{DynamicResource AccentColorBrush}"
                            IsIndeterminate="{Binding getSearching}"
                            Maximum="100"
                            Minimum="0" Height="16" MinHeight="10" FontSize="16" Grid.ColumnSpan="2"
                    />
                <Image x:Name="google_page_img" Visibility="{Binding getSearching, Converter={StaticResource BooleanToVisibilityConverter}}" Source="{Binding getsetImagem, Mode=OneWay}" Stretch="Fill" Margin="13" Grid.Row="1" Grid.Column="2"/>
                <Image x:Name="image_logo" Visibility="{Binding SearchBoxEnabled, Converter={StaticResource BooleanToVisibilityConverter}}" Source="Resources/icon_sistema_extratot_torpedos_brasil.jpg" Margin="13,120,13,129" Grid.Row="1" Grid.Column="2" StretchDirection="Both"/>
                <Border BorderBrush="{DynamicResource LightBorderBrush}" BorderThickness="3" CornerRadius="8,8,8,8" Margin="9,10,10,5" Grid.Row="1" Grid.Column="2" UseLayoutRounding="False">
                    <Image x:Name="image" Stretch="None"/>
                </Border>
                <Button x:Name="CancelarButton" Content="Parar Busca" IsEnabled="{Binding getSearching}" Style="{DynamicResource SquareButtonStyle}" SnapsToDevicePixels="True" FontSize="16" Height="32" VerticalAlignment="Top" MaxWidth="500" MaxHeight="34" Grid.Row="1" Margin="10,13,10,0" Click="CancelarButton_Click" HorizontalContentAlignment="Center" Grid.Column="1" MinHeight="0" Padding="5,5,5,6"/>
                <Button x:Name="NovaBuscaButton" Content="Nova Busca" IsEnabled="{Binding SearchBoxEnabled}" Click="NovaBuscaButton_Click" Style="{StaticResource AccentedSquareButtonStyle}" SnapsToDevicePixels="True" FontSize="16" Height="32" VerticalAlignment="Top" MaxWidth="500" MaxHeight="34" Margin="0,13,10,0" Grid.Row="1" Panel.ZIndex="1" MinHeight="0" Padding="5,5,5,6"/>
                <Label x:Name="label" Content="Label" Grid.Column="2" HorizontalAlignment="Left" Margin="202,18,0,0" Grid.Row="2" VerticalAlignment="Top" Height="16" Width="38"/>
                <Border BorderBrush="Black" BorderThickness="1" Height="32" Margin="10,0,3,0" Grid.Row="2" VerticalAlignment="Top" Grid.Column="3" CornerRadius="8" Background="#FFDEDDE8">
                    <Label x:Name="label_numemails" Content="{Binding Path=getNumTotalEmails}" ContentStringFormat="Emails Extraídos: {0}" FontSize="14" FontFamily="{DynamicResource ToggleSwitchHeaderFontFamily}" Margin="-1" VerticalAlignment="Top" Height="32" Background="{x:Null}" BorderThickness="0" BorderBrush="{DynamicResource LightBorderBrush}" HorizontalAlignment="Left" Width="281"/>
                </Border>
                <Border BorderBrush="Black" BorderThickness="1" Height="32" Margin="2,0,10,0" Grid.Row="2" VerticalAlignment="Top" Grid.Column="4" CornerRadius="8" Background="#FFDEDDE8">
                    <Label x:Name="label2_numtelefones" Content="{Binding Path=getNumTotalPhones}" ContentStringFormat="Telefones Extraídos: {0}" FontSize="14" FontFamily="{DynamicResource ToggleSwitchHeaderFontFamily}" Margin="-1,-1,-6,-1" VerticalAlignment="Top" Height="32" Background="{x:Null}" BorderThickness="0" BorderBrush="{DynamicResource LightBorderBrush}" HorizontalAlignment="Left" Width="276"/>
                </Border>
                <Grid Margin="69,200,68,200" Grid.Row="1" HorizontalAlignment="Center" Width="141" Height="116" VerticalAlignment="Center" Grid.ColumnSpan="2">
                    <Controls:ProgressRing IsActive="{Binding getSearching}" Margin="26,1,38,49" Height="Auto" Width="Auto" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
                    <Label x:Name="emprogresso" Visibility="{Binding getSearching, Converter={StaticResource BooleanToVisibilityConverter}}" Content="Em Progresso..." Margin="0,81,0,0" FontSize="17.333" FontFamily="Segoe UI Semibold" RenderTransformOrigin="0.732,0.592"/>
                </Grid>
                <TextBox x:Name="versionTextBox" HorizontalAlignment="Left" Height="23" Margin="0,10,0,0" Grid.Row="2" TextWrapping="Wrap" VerticalAlignment="Top" Width="120" BorderThickness="0" Focusable="False" IsReadOnly="True" Cursor="Arrow"/>
                <DataGrid ItemsSource="{Binding StatsModelCollection}" AutoGenerateColumns="False" Style="{StaticResource MetroDataGrid}" BorderBrush="{x:Null}" Background="{x:Null}" BorderThickness="0" Margin="10,13,10,5" Grid.Column="3" Grid.Row="1" Grid.ColumnSpan="2" Foreground="Black" Padding="0">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Título da Página" Width="220" Binding="{Binding GetTitle, Mode=OneWay}" />
                        <DataGridTextColumn Header="Página" Width="70" Binding="{Binding GetPageNumber, Mode=OneWay}" />
                        <DataGridTextColumn Header="E-Mails" Width="70" Binding="{Binding GetEmailsCount, Mode=OneWay}" />
                        <DataGridTextColumn Header="Telefones" Width="90" Binding="{Binding GetPhonesCount, Mode=OneWay}" />
                    </DataGrid.Columns>

                </DataGrid>
                <Border BorderBrush="{DynamicResource LightBorderBrush}" Grid.Column="3" Margin="10,10,10,5" Grid.Row="1" BorderThickness="3" CornerRadius="8" Grid.ColumnSpan="2" >





                </Border>

            </Grid>
        </TabItem>
        <TabItem Header="Ver E-Mails" Padding="6,2,9,2" >
            <Grid x:Name="GridTab2" Margin="0,16,-2,-5">
                <Grid.RowDefinitions>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Grid Margin="0,39,168,0">

                    <ListView x:Name="ListEmails" ItemsSource="{Binding DataEmailCollection}" SelectionChanged="ListView_SelectionChanged" Background="{x:Null}" Foreground="{x:Null}" ScrollViewer.VerticalScrollBarVisibility="Disabled"
        				ScrollViewer.HorizontalScrollBarVisibility="Auto" BorderBrush="{x:Null}" SelectedIndex="0" Padding="0" Focusable="False">
                        <ListView.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform/>
                                <SkewTransform/>
                                <RotateTransform Angle="-0.124"/>
                                <TranslateTransform/>
                            </TransformGroup>
                        </ListView.RenderTransform>

                        <ListView.ItemsPanel>

                            <ItemsPanelTemplate>
                                <WrapPanel
        							Orientation="Vertical"/>
                            </ItemsPanelTemplate>
                        </ListView.ItemsPanel>
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <CheckBox x:Name="checkBox33" Content="{Binding GetData}" ScrollViewer.VerticalScrollBarVisibility="Disabled" IsChecked="{Binding IsSelected, Mode=TwoWay}" Padding="5,0,0,0" Margin="2,0,0,0"/>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                </Grid>
                <Button x:Name="exportarEmails" Content="Exportar Emails" Style="{StaticResource AccentedSquareButtonStyle}" SnapsToDevicePixels="True" FontSize="16" Height="34" VerticalAlignment="Top" MaxWidth="153" MaxHeight="34" Margin="0,51,15,0" HorizontalAlignment="Right" Width="153" Click="button1_Click_1"/>
                <TextBox x:Name="textboxEmails"
        			Controls:TextBoxHelper.UseFloatingWatermark="True"
        			Controls:TextBoxHelper.Watermark="Pesquisar"
        			Controls:TextBoxHelper.ClearTextButton="True"
        			Style="{DynamicResource MetroButtonTextBox}" VerticalContentAlignment="Center" FontFamily="Segoe UI" TextDecorations="{x:Null}" MaxLength="80" MaxLines="1" Padding="3,0" MinWidth="270" MinHeight="37" MaxWidth="270" MaxHeight="37" Height="37" VerticalAlignment="Top" HorizontalAlignment="Left" Width="270" TextChanged="textboxEmails_TextChanged" />
                <CheckBox x:Name="checkBox_selecionartudo1" Style="{StaticResource MetroCheckBox}" Content="Selecionar Tudo" Margin="0,90,15,0" VerticalAlignment="Top" Height="27" HorizontalAlignment="Right" Width="153" FontFamily="Segoe UI Semibold" FontSize="13.333" Checked="checkBox_selecionartudo1_Checked" Unchecked="checkBox_selecionartudo1_Unchecked"/>
                <Button x:Name="ExportarTudo2" Content="Exportar Tudo" Click="exportarTudo_Click" Style="{StaticResource AccentedSquareButtonStyle}" SnapsToDevicePixels="True" FontSize="16" Height="34" VerticalAlignment="Top" MaxWidth="153" MaxHeight="34" Margin="0,2,15,0" HorizontalAlignment="Right" Width="153"/>


            </Grid>
        </TabItem>
        <TabItem Header="Ver Telefones">
            <Grid x:Name="GridTab3" Margin="0,16,-2,-5">
                <Grid.RowDefinitions>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Grid Margin="0,39,168,0">

                    <ListView x:Name="ListPhones" ItemsSource="{Binding DataPhoneCollection}" SelectionChanged="ListView_SelectionChanged" Background="{x:Null}" Foreground="{x:Null}" ScrollViewer.VerticalScrollBarVisibility="Disabled"
        				ScrollViewer.HorizontalScrollBarVisibility="Auto" BorderBrush="{x:Null}" SelectedIndex="0" Padding="0" Focusable="False">
                        <ListView.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform/>
                                <SkewTransform/>
                                <RotateTransform Angle="-0.124"/>
                                <TranslateTransform/>
                            </TransformGroup>
                        </ListView.RenderTransform>

                        <ListView.ItemsPanel>

                            <ItemsPanelTemplate>
                                <WrapPanel
        							Orientation="Vertical"/>
                            </ItemsPanelTemplate>
                        </ListView.ItemsPanel>
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <CheckBox x:Name="checkBox" Content="{Binding GetData}" ScrollViewer.VerticalScrollBarVisibility="Disabled" IsChecked="{Binding IsSelected, Mode=TwoWay}" Padding="5,0" Margin="2,0,10,0"/>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                </Grid>
                <Button x:Name="exportarPhones" Content="Exportar Telefones" Click="button1_Click_exportarPhones" Style="{StaticResource AccentedSquareButtonStyle}" SnapsToDevicePixels="True" FontSize="16" Height="34" VerticalAlignment="Top" MaxWidth="153" MaxHeight="34" Margin="0,51,15,0" HorizontalAlignment="Right" Width="153"/>
                <TextBox x:Name="textboxPhones"
                 Controls:TextBoxHelper.UseFloatingWatermark="True"
                 Controls:TextBoxHelper.Watermark="Pesquisar"
                 Controls:TextBoxHelper.ClearTextButton="True"
                 Style="{DynamicResource MetroButtonTextBox}" VerticalContentAlignment="Center" FontFamily="Segoe UI" TextDecorations="{x:Null}" MaxLength="80" MaxLines="1" Padding="3,0" MinWidth="270" MinHeight="37" MaxWidth="270" MaxHeight="37" Height="37" VerticalAlignment="Top" HorizontalAlignment="Left" Width="270" TextChanged="textboxPhones_TextChanged" />
                <CheckBox x:Name="checkBox_selecionartudo" Style="{StaticResource MetroCheckBox}" Content="Selecionar Tudo" Margin="0,90,15,0" VerticalAlignment="Top" Height="27" HorizontalAlignment="Right" Width="153" FontFamily="Segoe UI Semibold" FontSize="13.333" Checked="checkBox_selecionartudo_Checked" Unchecked="checkBox_selecionartudo_Unchecked"/>
                <Button x:Name="exportarTudo" Content="Exportar Tudo" Style="{StaticResource AccentedSquareButtonStyle}" SnapsToDevicePixels="True" FontSize="16" Height="34" VerticalAlignment="Top" MaxWidth="153" MaxHeight="34" Margin="0,2,15,0" HorizontalAlignment="Right" Width="153" Click="exportarTudo_Click"/>


            </Grid>
        </TabItem>

    </TabControl>

    <Controls:MetroWindow.Flyouts>
        <Controls:FlyoutsControl>
            <Controls:Flyout x:Name="flyout" Header="Nova Busca" Position="Left" Width="400">
                <Grid>
                    <TextBox x:Name="textbox_search"
                 Controls:TextBoxHelper.UseFloatingWatermark="False"
                 IsEnabled="{Binding SearchBoxEnabled}"
                 Controls:TextBoxHelper.Watermark="Pesquisar"
                 MaxLength="80" 
                 MaxLines="1" Padding="0,0,3,0"
                 KeyDown="textbox_search_KeyDown" Height="30" VerticalAlignment="Top" TextChanged="textbox_search_TextChanged"
                 Style="{DynamicResource TextBoxStyle1}" Margin="10,20,19,0" Grid.ColumnSpan="2" FontFamily="Segoe UI Semibold" FontSize="13.333" >
                        <Controls:TextBoxHelper.ButtonContent>
                            <Rectangle Width="20" Height="20" Fill="{DynamicResource AccentColorBrush}">
                                <Rectangle.OpacityMask>
                                    <VisualBrush Stretch="Fill" Visual="{DynamicResource appbar_arrow_right}" />
                                </Rectangle.OpacityMask>
                            </Rectangle>
                        </Controls:TextBoxHelper.ButtonContent>
                    </TextBox>
                    <Grid HorizontalAlignment="Left" Height="59" Margin="0,55,0,0" VerticalAlignment="Top" Width="380" Grid.ColumnSpan="2">
                        <Grid.Resources>
                            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
                        </Grid.Resources>
                        <Controls:NumericUpDown x:Name="numeric_ini2" Minimum = "1" Value="{Binding GetMinValuePag, Mode=TwoWay}" Maximum = "100" Interval = "1" Margin="134,11,0,0" Height="33" VerticalAlignment="Top" RenderTransformOrigin="1.853,1.369" HorizontalAlignment="Left" Width="81"/>
                        <Controls:NumericUpDown x:Name="numeric_end2" Minimum = "{Binding Value, ElementName=numeric_ini2, Mode=TwoWay}" Value="{Binding GetMaxValuePag, Mode=TwoWay}" Maximum = "100" Interval = "1" Margin="299,11,0,0" Height="33" VerticalAlignment="Top"/>
                        <Label x:Name="label11" Content="De:" HorizontalAlignment="Left" Margin="98,11,0,0" VerticalAlignment="Top" Width="31" Height="33" FontSize="14.667" FontFamily="Segoe UI Historic"/>
                        <Label x:Name="label22" Content="Até:" HorizontalAlignment="Left" Margin="259,11,0,0" VerticalAlignment="Top" RenderTransformOrigin="1.406,0.705" FontSize="14.667" FontFamily="Segoe UI Historic" Height="33"/>
                        <Label x:Name="label11_Copy" FontWeight="Normal" FontSize="{DynamicResource ToggleSwitchHeaderFontSize}" FontFamily="{DynamicResource ToggleSwitchHeaderFontFamily}" HorizontalAlignment="Left" Margin="12,11,0,15" Opacity="0.65" VerticalAlignment="Center" Content="Páginas:" Width="74" Height="33" TextOptions.TextFormattingMode="Display" RenderTransformOrigin="1.027,0.667" Padding="0,5,0,0"/>
                        <Controls:ToggleSwitch x:Name="toggleExternalUrls" Header="Incluir URLs Externas" IsChecked="{Binding isExternalUrlBoxActive, Mode=OneWayToSource}" OnLabel="Sim" OffLabel="Não" Margin="10,69,0,-69" Cursor="" UseLayoutRounding="True" Padding="0" HorizontalAlignment="Left" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" />
                    </Grid>
                    <TextBox x:Name="textBox_ExternalUrls" Visibility="{Binding ElementName=toggleExternalUrls, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}" Controls:TextBoxHelper.Watermark="Insira uma URL/Link por linha" Controls:TextBoxHelper.UseFloatingWatermark="True" HorizontalAlignment="Left" Height="320" Margin="10,195,0,0" VerticalAlignment="Top" Width="380" AcceptsReturn="True" VerticalScrollBarVisibility="Auto"/>

                </Grid>
            </Controls:Flyout>
        </Controls:FlyoutsControl>
    </Controls:MetroWindow.Flyouts>







</Controls:MetroWindow>